/* 모든 요소 선택 */
* {
  font-weight: bold;
  color: darkorange;
}
/* 별표(*)는 페이지 안에 있는 모든 요소라는 의미 */
* {
  color : plum;
}
/* 
결과 화면을 봤을 때, 텍스트가 plum 적용이 되어있다는 것을 확인할 수 있습니다. 이상에서 알 수 있는 것은 이어지는 두 개의 선택자가 같을 경우에는 뒤에 오는 코드가 우선순위를 가집니다. 그런데 첫 번째 선택자에는 font-weight가 있지만 두 번쨰에는 없죠. 위에서 적용된 속성은 유지된 상태로 덮어쓰기가 된다는 것도 확인 가능합니다. 
*/

/* 태그 선택자 */
p {
  color: olivedrab;
}
/* 
이건 좀 간단해보입니다. HTML에서 사용하는 태그를 그대로 사용하면 됩니다. 그러면 p 태그에 해당된 모든 폰트 색이 olivedrab이 적용된 것을 확인할 수 있습니다. 
*/

/*
태그 선택자는 기본 선택자(*)로 작성한 '모든 요소 선택자'보다 우선 순위를 가집니다.

더 구체적이고 지엽적인 선택자가 우선 순위를 획득한다는 점입니다.

CSS가 골치아픈 이유 중에 하나는 어떤 코드를 더 최근에 썼냐 + 어떤 조건이 더 구체적인가가 복합적으로 적용된 결과가 웹 페이지에 반영된다는 점입니다.
*/

/* 클래스 선택자 */

/* 
HTML 태그 내에 class를 명시할 수 있습니다. 클래스 선택자는 페이지의 여러 곳에 중복으로 사용 가능합니다.  
*/

.blue {
  color: lightblue;
}

/*
이상의 적용 결과에서 보시면 span class="blue"태그도 색깔이 바뀌는 것을 확인했을 때.

클래스 선택자가 태그 선택자 보다 우선 순위를 가진다는 점을 확인 할 수 있습니다.
*/
p.blue {
  color: slateblue;
}

.blue.dark {
  color: mediumblue;
}

p.blue.blue.dark {
  color: darkblue;
}

/*
이상에서 볼 수 있는 클래스 선택자의 특징은 다른 선택자에 이어 붙이는 것이 가능하다는 점입니다. 첫 번쨰(41번 코드라인) 예시는 태그 선택자에 '.'을 붙여서 클래스 선택자가 적용된 점입니다. 그러면 span class="blue"보다 더 구체적이기 때문에 span class="blue"에는 lightblue가 적용되어있고, p class="blue"에는 slateblue가 적용됐다는 것을 확인 할 수 있습니다.

45번 라인의 예시를 확인해보시면, blue.dark이기 때문에 '모든 태그에서 class 명이 blue이면서 dark인 것'을 찾아서 mediumblue를 적용한다는 의미가 되겠습니다. 저희 html상에서는 하나 밖에 없죠.

그런데, 49번 라인을 확인하면 p.blue.dark이기 때문에 더 구체적으로 조건이 명시되었으므로, 결과적으로 mediumblue가 아니라 darkblue가 적용되었음을 확인할 수 있습니다.
*/

/* id 선택자 */
/* 
이거 어제 한 번 했습니다. 한 페이지에서 여러 요소를 공유해서 사용할 수 있는 클래스와 달리 id는 딱 한 가지 요소에만 고유하게 사용할 수 있습니다. id 명을 불러오는 구분자는 #입니다. 이 부분을 어제 했습니다.
*/

#red {
  color: tomato;
}

/* 
이상의 주석에서 볼 수 있듯이 id는 클래스보다 더 조건이 구체적이기 때문에 .html의 15번 라인에서 css는 .blue가 적용되는 것이 아니라 #red가 적용됐음을 확인 할 수 있습니다.

그리고 중요한거 : '.'은 클래스 지정 '#'은 id지정이라는 점입니다.
*/

/* 그룹 선택자 */
span, .dark, #red {
  text-decoration: underline;
}

/* 
앞에있는 것이 우선 순위가 높습니다.
id 선택자 > 클래스 선택자 > 태그 선택자 > 기본 선택자
*/